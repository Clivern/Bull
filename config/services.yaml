# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    env(APP_IDENT): 'worker_a'
    env(APP_ROLES): 'role_a,role_b'
    env(MQ_URL): 'user:password@127.0.0.1:5672'
    env(DEBUG_LEVEL): 'error'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # Interface (Contract) to Implementation Mapping
    App\Contract\Module\Service\MessageBroker: '@App\Module\Service\RabbitMQ'

    # Services
    App\Module\Service\RabbitMQ:
        arguments:
            $appIdent: '%env(APP_IDENT)%'
            $appRoles: '%env(APP_ROLES)%'
            $mqURL: '%env(MQ_URL)%'
            $logger: '@App\Utils\Logger'

    # Controllers
    App\Controller\Web\HomeController:
        arguments:
            $logger: '@App\Utils\Logger'

    App\Utils\Logger:
        arguments:
            $logger: "@logger"
            $path: "%kernel.logs_dir%/%%name%%.log"
            $level: '%env(DEBUG_LEVEL)%'